# File: /etc/amodemd.conf
#
# $Id$
#
# (C) 1999 Morten Rolland [Morten.Rolland@asker.mail.telia.com]
#
# Example configuration file for 'amodemd'.
#


# When 'amodemd' starts as a daemon, it writes a pid-file to make it
# easy to kill the daemon off again at a later stage.  Disable the
# generation of a PID-file with 'pidfile = 0'.

pidfile = /var/run/amodemd.pid

# When 'amodemd' is used on top of ISDN supporting audio, the device has
# to be specified, the phone-number to use (MSN), etc.:

isdn-device = /dev/ttyI5     # /dev/ttyI* are used for ISDN-audio
isdn-msn = 5551234           # Full number when using Euro-ISDN
country = 47                 # Country of installation
international-prefix = 00    # Prefix to reach foreign destinations

# The daemon 'amodemd' performs a lot of timing critical digital signal
# processing.  In order to get enough CPU-resources to avoid dropping
# a connection when the system load increases, the daemon installs
# itself as a "Real-Time" process.  This way, it is guaranteed to get
# enough attention from the CPU.  The realtime-priority option indicates
# which real-time level it will use.  Valid values are 0-99.
# A value of '0' makes 'amodemd' run as a normal user process.
# When there are other real-time processes on the system, their
# individual priorities may have to be adjusted.  This option can only
# be used if 'amodemd' is run as 'root'.

realtime-priority = 1

# If a real-time process goes wild, using all of the CPU, the system will
# be left completely unusable.  Do not install a real-time daemon like
# 'amodemd' on a production system without being aware of the possibility
# of a system hang/crash.
#
# In order to minimize the risk of having to reset a system as a result
# of a wild-running daemon, 'amodemd' features a watchdog timer that will
# kill itself off if there seems to be a problem.  The watchdog timer
# period is in seconds, and is reset regularly when 'amodemd' thinks that
# it is behaving nicely.  When 'amodemd' hangs your system, wait for the
# watchdog timer to unlock it.

watchdog-timer = 60     # 60 seconds of hung system => abort 'amodemd'

# A real-time system is no good if it has to wait for disk-operations
# in the middle of a timing-critical task.  The virtual memory system
# may cause this to happen, unless paging is turned off for the real-
# time process.  'amodemd' is capable of doing this, with the following
# configuration option (only available when run as 'root'):

lock-memory = 1
